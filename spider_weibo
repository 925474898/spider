# -*- coding:utf-8 -*- 
__author__ = 'Isolation'
#coding = utf-8

import sys
import urllib
import urllib2
import cookielib
import base64
import re
import json
import rsa
import binascii
import time
#import requests
#from bs4 import BeautifulSoup

#新浪微博的模拟登陆
class spider:
    uid = 0
    def enableCookies(self):
            #获取一个保存cookies的对象
            cj = cookielib.CookieJar()
            #将一个保存cookies对象和一个HTTP的cookie的处理器绑定
            cookie_support = urllib2.HTTPCookieProcessor(cj)
            #创建一个opener,设置一个handler用于处理http的url打开
            opener = urllib2.build_opener(cookie_support, urllib2.HTTPHandler)
            #安装opener，此后调用urlopen()时会使用安装过的opener对象
            urllib2.install_opener(opener)

    #预登陆获得 servertime, nonce
    def getServerData(self):
            url = 'https://login.sina.com.cn/sso/prelogin.php?entry=weibo&callback=sinaSSOController.preloginCallBack&su=MTUwMDI4NTc4NDc%3D&rsakt=mod&checkpin=1&client=ssologin.js(v1.4.19)&_=1499671629365'
            data = urllib2.urlopen(url).read()
            p = re.compile('({.*})')
            try:
                    json_data = p.search(data).group(1)
                    data = json.loads(json_data)
                    servertime = str(data['servertime'])
                    nonce = data['nonce']
                    pubkey = data['pubkey']
                    return servertime, nonce, pubkey
            except:
                    print 'Get severtime error!'
                    return None


    #获取加密的密码
    def getPassword(self, password, servertime, nonce, pubkey):
            rsaPublickey = int(pubkey, 16)
            key = rsa.PublicKey(rsaPublickey, 65537) #创建公钥
            message = str(servertime) + '\t' + str(nonce) + '\n' + str(password) #拼接明文js加密文件中得到
            passwd = rsa.encrypt(message, key) #加密
            passwd = binascii.b2a_hex(passwd) #将加密信息转换为16进制。
            return passwd

    #获取加密的用户名
    def getUsername(self, username):
            username_ = urllib.quote(username)
            username = base64.encodestring(username_)[:-1]
            return username

     #获取需要提交的表单数据
    def getFormData(self,userName,password,servertime,nonce,pubkey):
        userName = self.getUsername(userName)
        psw = self.getPassword(password,servertime,nonce,pubkey)
        form_data = {
            'encoding':'UTF-8',
            'entry':'weibo',
            'from':'',
            'gateway':'1',
            'nonce':nonce,
            'pagerefer':'http://login.sina.com.cn/sso/logout.php?entry=miniblog&r=http%3A%2F%2Fweibo.com%2Flogout.php%3Fbackurl%3D%252F',
            'prelt':'981',
            'pwencode':'rsa2',
            'qrcode_flag':'false',
            'returntype':'META',
            'rsakv':'1330428213',
            'savestate':'7',
            'servertime':servertime,
            'service':'miniblog',
            'sp':psw,
            'sr':'1536*864',
            'su':userName,
            'url':'http://weibo.com/ajaxlogin.php?framelogin=1&callback=parent.sinaSSOController.feedBackUrlCallBack',
            'useticket':'1',
            'vsnf':'1',
            }
        formData = urllib.urlencode(form_data)
        return formData

    #登陆函数
    def Login(self,username,psw):
            self.enableCookies()
            url = 'https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)'
            servertime,nonce,pubkey= self.getServerData()
            formData = self.getFormData(username,psw,servertime,nonce,pubkey)
            headers = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0'}
            req  = urllib2.Request(
                    url = url,
                    data = formData,
                    headers = headers
            )
            result = urllib2.urlopen(req)
            text = result.read()
            #print text
            #重定位网址
            p = re.compile('location\.replace\(\"(.*?)\"\)')
            try:
                    login_url = p.search(text).group(1)
                    #由于之前的绑定，cookies信息会直接写入
                    a = urllib2.urlopen(login_url)
                    text1 = a.read()
                    q = re.compile('''location\.replace\(['"](.*?)['"]\)''')
                    login_url1 = q.search(text1).group(1)
                    resp = urllib2.urlopen(login_url1).read()
                    print "Login success!"
            except:
                    print 'Login error!'
                    return 0

            login_str = re.search('\((\{.*\})\)', resp).group(1)
            login_info = json.loads(login_str)
            uniqueid = login_info["userinfo"]["uniqueid"]       #主页URL中的UID
            self.uid = uniqueid
            #print uniqueid
            '''
            #访问主页，把主页写入到文件中
            url = ''										#填入个人主页url
            request = urllib2.Request(url)
            response = urllib2.urlopen(request)
            text = response.read()
            fp_raw = open("e://weibo.html","w+")
            fp_raw.write(text)
            fp_raw.close()
            #print text
            '''
    #登陆新浪微博后的操作
    def Post(self, list):
        #data = raw_input(u"输入发送内容：")
        tijiao_data = {
            "location": "v6_content_home",
            "appkey": "",
            "style_type": "1",
            "pic_id": "",
            "text": list[0],
            "pdetail": "",
            "rank": "0",
            "rankid": "",
            "pub_source": "main_",
            "module": "stissue",
            "pub_type": "dialog",
            "_t": "0",
            "tid": ""
        }
        send_Data = urllib.urlencode(tijiao_data)
        Referer = "http://www.weibo.com/u/%s/home" % self.uid
        headers = {
            "Referer":Referer,
            'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0'
        }
        req = urllib2.Request(
            url = "http://www.weibo.com/aj/mblog/add?ajwvr=6&__rnd=%d" % int( time.time() * 1000),
            data = send_Data,
            headers = headers
        )
        result = urllib2.urlopen(req)
